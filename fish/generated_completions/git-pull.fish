# git-pull
# Autogenerated from man page /usr/share/man/man1/git-pull.1.gz
# using Deroffing man parser
complete -c git-pull -s q -l quiet --description 'This is passed to both underlying git-fetch to … [See Man Page]'
complete -c git-pull -s v -l verbose --description 'Pass --verbose to git-fetch and git-merge.'
complete -c git-pull -l '[no-]recurse-submodules[' --description 'This option controls if new commits of all popu… [See Man Page]'
complete -c git-pull -l commit -l no-commit --description 'Perform the merge and commit the result.'
complete -c git-pull -l edit -s e -l no-edit --description 'Invoke an editor before committing successful m… [See Man Page]'
complete -c git-pull -l ff --description 'When the merge resolves as a fast-forward, only… [See Man Page]'
complete -c git-pull -l no-ff --description 'Create a merge commit even when the merge resol… [See Man Page]'
complete -c git-pull -l ff-only --description 'Refuse to merge and exit with a non-zero status… [See Man Page]'
complete -c git-pull -l 'log[' -l no-log --description 'In addition to branch names, populate the log m… [See Man Page]'
complete -c git-pull -l stat -s n -l no-stat --description 'Show a diffstat at the end of the merge.'
complete -c git-pull -l squash -l no-squash --description 'Produce the working tree and index state as if … [See Man Page]'
complete -c git-pull -s s -l strategy --description 'Use the given merge strategy; can be supplied m… [See Man Page]'
complete -c git-pull -s X -l strategy-option --description 'Pass merge strategy specific option through to … [See Man Page]'
complete -c git-pull -l verify-signatures -l no-verify-signatures --description 'Verify that the commits being merged have good … [See Man Page]'
complete -c git-pull -l summary -l no-summary --description 'Synonyms to --stat and --no-stat; these are dep… [See Man Page]'
complete -c git-pull -s r -l 'rebase[' --description 'When true, rebase the current branch on top of … [See Man Page]'
complete -c git-pull -l no-rebase --description 'Override earlier --rebase.'
complete -c git-pull -l all --description 'Fetch all remotes.'
complete -c git-pull -s a -l append --description 'Append ref names and object names of fetched re… [See Man Page]'
complete -c git-pull -l depth --description 'Deepen or shorten the history of a shallow repo… [See Man Page]'
complete -c git-pull -l unshallow --description 'If the source repository is complete, convert a… [See Man Page]'
complete -c git-pull -l update-shallow --description 'By default when fetching from a shallow reposit… [See Man Page]'
complete -c git-pull -s f -l force --description 'When git fetch is used with <rbranch>:<lbranch>… [See Man Page]'
complete -c git-pull -s k -l keep --description 'Keep downloaded pack.'
complete -c git-pull -l no-tags --description 'By default, tags that point at objects that are… [See Man Page]'
complete -c git-pull -s u -l update-head-ok --description 'By default git fetch refuses to update the head… [See Man Page]'
complete -c git-pull -l upload-pack --description 'When given, and the repository to fetch from is… [See Man Page]'
complete -c git-pull -l progress --description 'Progress status is reported on the standard err… [See Man Page]'
complete -c git-pull -l preserve-merges --description 'along to git rebase so that locally created mer… [See Man Page]'
complete -c git-pull -l rebase --description 'instead of merging.'
complete -c git-pull -l exec --description 'is passed to the command to specify non-default… [See Man Page]'
complete -c git-pull -s w --description '.'
complete -c git-pull -l 'ignore-space-at-eol.' --description 'oc o 2. 3.'

